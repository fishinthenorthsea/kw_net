// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: save_data.proto

#include "save_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace KwSave {
PROTOBUF_CONSTEXPR SaveSystem::SaveSystem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.save_home_)*/nullptr
  , /*decltype(_impl_.save_play_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveSystemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveSystemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveSystemDefaultTypeInternal() {}
  union {
    SaveSystem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveSystemDefaultTypeInternal _SaveSystem_default_instance_;
PROTOBUF_CONSTEXPR Save_Data::Save_Data(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.homesave_)*/nullptr
  , /*decltype(_impl_.playsave_)*/nullptr
  , /*decltype(_impl_.mapsave_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Save_DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Save_DataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Save_DataDefaultTypeInternal() {}
  union {
    Save_Data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Save_DataDefaultTypeInternal _Save_Data_default_instance_;
}  // namespace KwSave
static ::_pb::Metadata file_level_metadata_save_5fdata_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_save_5fdata_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_save_5fdata_2eproto = nullptr;

const uint32_t TableStruct_save_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KwSave::SaveSystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::KwSave::SaveSystem, _impl_.save_home_),
  PROTOBUF_FIELD_OFFSET(::KwSave::SaveSystem, _impl_.save_play_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KwSave::Save_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::KwSave::Save_Data, _impl_.homesave_),
  PROTOBUF_FIELD_OFFSET(::KwSave::Save_Data, _impl_.playsave_),
  PROTOBUF_FIELD_OFFSET(::KwSave::Save_Data, _impl_.mapsave_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::KwSave::SaveSystem)},
  { 8, -1, -1, sizeof(::KwSave::Save_Data)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::KwSave::_SaveSystem_default_instance_._instance,
  &::KwSave::_Save_Data_default_instance_._instance,
};

const char descriptor_table_protodef_save_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017save_data.proto\022\006KwSave\032\017save_home.pro"
  "to\032\017save_play.proto\"^\n\nSaveSystem\022\'\n\tsav"
  "e_home\030\001 \001(\0132\024.KwSave.SaveHomeData\022\'\n\tsa"
  "ve_play\030\002 \001(\0132\024.KwSave.SavePlayData\"|\n\tS"
  "ave_Data\022$\n\010homeSave\030\001 \001(\0132\022.KwSave.Save"
  "System\022$\n\010playSave\030\002 \001(\0132\022.KwSave.SaveSy"
  "stem\022#\n\007mapSave\030\003 \001(\0132\022.KwSave.SaveSyste"
  "mb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_save_5fdata_2eproto_deps[2] = {
  &::descriptor_table_save_5fhome_2eproto,
  &::descriptor_table_save_5fplay_2eproto,
};
static ::_pbi::once_flag descriptor_table_save_5fdata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_save_5fdata_2eproto = {
    false, false, 289, descriptor_table_protodef_save_5fdata_2eproto,
    "save_data.proto",
    &descriptor_table_save_5fdata_2eproto_once, descriptor_table_save_5fdata_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_save_5fdata_2eproto::offsets,
    file_level_metadata_save_5fdata_2eproto, file_level_enum_descriptors_save_5fdata_2eproto,
    file_level_service_descriptors_save_5fdata_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_save_5fdata_2eproto_getter() {
  return &descriptor_table_save_5fdata_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_save_5fdata_2eproto(&descriptor_table_save_5fdata_2eproto);
namespace KwSave {

// ===================================================================

class SaveSystem::_Internal {
 public:
  static const ::KwSave::SaveHomeData& save_home(const SaveSystem* msg);
  static const ::KwSave::SavePlayData& save_play(const SaveSystem* msg);
};

const ::KwSave::SaveHomeData&
SaveSystem::_Internal::save_home(const SaveSystem* msg) {
  return *msg->_impl_.save_home_;
}
const ::KwSave::SavePlayData&
SaveSystem::_Internal::save_play(const SaveSystem* msg) {
  return *msg->_impl_.save_play_;
}
void SaveSystem::clear_save_home() {
  if (GetArenaForAllocation() == nullptr && _impl_.save_home_ != nullptr) {
    delete _impl_.save_home_;
  }
  _impl_.save_home_ = nullptr;
}
void SaveSystem::clear_save_play() {
  if (GetArenaForAllocation() == nullptr && _impl_.save_play_ != nullptr) {
    delete _impl_.save_play_;
  }
  _impl_.save_play_ = nullptr;
}
SaveSystem::SaveSystem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:KwSave.SaveSystem)
}
SaveSystem::SaveSystem(const SaveSystem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveSystem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.save_home_){nullptr}
    , decltype(_impl_.save_play_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_save_home()) {
    _this->_impl_.save_home_ = new ::KwSave::SaveHomeData(*from._impl_.save_home_);
  }
  if (from._internal_has_save_play()) {
    _this->_impl_.save_play_ = new ::KwSave::SavePlayData(*from._impl_.save_play_);
  }
  // @@protoc_insertion_point(copy_constructor:KwSave.SaveSystem)
}

inline void SaveSystem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.save_home_){nullptr}
    , decltype(_impl_.save_play_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SaveSystem::~SaveSystem() {
  // @@protoc_insertion_point(destructor:KwSave.SaveSystem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveSystem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.save_home_;
  if (this != internal_default_instance()) delete _impl_.save_play_;
}

void SaveSystem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:KwSave.SaveSystem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.save_home_ != nullptr) {
    delete _impl_.save_home_;
  }
  _impl_.save_home_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.save_play_ != nullptr) {
    delete _impl_.save_play_;
  }
  _impl_.save_play_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveSystem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .KwSave.SaveHomeData save_home = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_save_home(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .KwSave.SavePlayData save_play = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_save_play(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveSystem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KwSave.SaveSystem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .KwSave.SaveHomeData save_home = 1;
  if (this->_internal_has_save_home()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::save_home(this),
        _Internal::save_home(this).GetCachedSize(), target, stream);
  }

  // .KwSave.SavePlayData save_play = 2;
  if (this->_internal_has_save_play()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::save_play(this),
        _Internal::save_play(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KwSave.SaveSystem)
  return target;
}

size_t SaveSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KwSave.SaveSystem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .KwSave.SaveHomeData save_home = 1;
  if (this->_internal_has_save_home()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.save_home_);
  }

  // .KwSave.SavePlayData save_play = 2;
  if (this->_internal_has_save_play()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.save_play_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveSystem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveSystem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveSystem::GetClassData() const { return &_class_data_; }


void SaveSystem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveSystem*>(&to_msg);
  auto& from = static_cast<const SaveSystem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:KwSave.SaveSystem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_save_home()) {
    _this->_internal_mutable_save_home()->::KwSave::SaveHomeData::MergeFrom(
        from._internal_save_home());
  }
  if (from._internal_has_save_play()) {
    _this->_internal_mutable_save_play()->::KwSave::SavePlayData::MergeFrom(
        from._internal_save_play());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveSystem::CopyFrom(const SaveSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KwSave.SaveSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveSystem::IsInitialized() const {
  return true;
}

void SaveSystem::InternalSwap(SaveSystem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SaveSystem, _impl_.save_play_)
      + sizeof(SaveSystem::_impl_.save_play_)
      - PROTOBUF_FIELD_OFFSET(SaveSystem, _impl_.save_home_)>(
          reinterpret_cast<char*>(&_impl_.save_home_),
          reinterpret_cast<char*>(&other->_impl_.save_home_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveSystem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_save_5fdata_2eproto_getter, &descriptor_table_save_5fdata_2eproto_once,
      file_level_metadata_save_5fdata_2eproto[0]);
}

// ===================================================================

class Save_Data::_Internal {
 public:
  static const ::KwSave::SaveSystem& homesave(const Save_Data* msg);
  static const ::KwSave::SaveSystem& playsave(const Save_Data* msg);
  static const ::KwSave::SaveSystem& mapsave(const Save_Data* msg);
};

const ::KwSave::SaveSystem&
Save_Data::_Internal::homesave(const Save_Data* msg) {
  return *msg->_impl_.homesave_;
}
const ::KwSave::SaveSystem&
Save_Data::_Internal::playsave(const Save_Data* msg) {
  return *msg->_impl_.playsave_;
}
const ::KwSave::SaveSystem&
Save_Data::_Internal::mapsave(const Save_Data* msg) {
  return *msg->_impl_.mapsave_;
}
Save_Data::Save_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:KwSave.Save_Data)
}
Save_Data::Save_Data(const Save_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Save_Data* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.homesave_){nullptr}
    , decltype(_impl_.playsave_){nullptr}
    , decltype(_impl_.mapsave_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_homesave()) {
    _this->_impl_.homesave_ = new ::KwSave::SaveSystem(*from._impl_.homesave_);
  }
  if (from._internal_has_playsave()) {
    _this->_impl_.playsave_ = new ::KwSave::SaveSystem(*from._impl_.playsave_);
  }
  if (from._internal_has_mapsave()) {
    _this->_impl_.mapsave_ = new ::KwSave::SaveSystem(*from._impl_.mapsave_);
  }
  // @@protoc_insertion_point(copy_constructor:KwSave.Save_Data)
}

inline void Save_Data::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.homesave_){nullptr}
    , decltype(_impl_.playsave_){nullptr}
    , decltype(_impl_.mapsave_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Save_Data::~Save_Data() {
  // @@protoc_insertion_point(destructor:KwSave.Save_Data)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Save_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.homesave_;
  if (this != internal_default_instance()) delete _impl_.playsave_;
  if (this != internal_default_instance()) delete _impl_.mapsave_;
}

void Save_Data::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Save_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:KwSave.Save_Data)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.homesave_ != nullptr) {
    delete _impl_.homesave_;
  }
  _impl_.homesave_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.playsave_ != nullptr) {
    delete _impl_.playsave_;
  }
  _impl_.playsave_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.mapsave_ != nullptr) {
    delete _impl_.mapsave_;
  }
  _impl_.mapsave_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Save_Data::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .KwSave.SaveSystem homeSave = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_homesave(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .KwSave.SaveSystem playSave = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_playsave(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .KwSave.SaveSystem mapSave = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_mapsave(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Save_Data::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:KwSave.Save_Data)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .KwSave.SaveSystem homeSave = 1;
  if (this->_internal_has_homesave()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::homesave(this),
        _Internal::homesave(this).GetCachedSize(), target, stream);
  }

  // .KwSave.SaveSystem playSave = 2;
  if (this->_internal_has_playsave()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::playsave(this),
        _Internal::playsave(this).GetCachedSize(), target, stream);
  }

  // .KwSave.SaveSystem mapSave = 3;
  if (this->_internal_has_mapsave()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::mapsave(this),
        _Internal::mapsave(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KwSave.Save_Data)
  return target;
}

size_t Save_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KwSave.Save_Data)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .KwSave.SaveSystem homeSave = 1;
  if (this->_internal_has_homesave()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.homesave_);
  }

  // .KwSave.SaveSystem playSave = 2;
  if (this->_internal_has_playsave()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.playsave_);
  }

  // .KwSave.SaveSystem mapSave = 3;
  if (this->_internal_has_mapsave()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mapsave_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Save_Data::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Save_Data::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Save_Data::GetClassData() const { return &_class_data_; }


void Save_Data::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Save_Data*>(&to_msg);
  auto& from = static_cast<const Save_Data&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:KwSave.Save_Data)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_homesave()) {
    _this->_internal_mutable_homesave()->::KwSave::SaveSystem::MergeFrom(
        from._internal_homesave());
  }
  if (from._internal_has_playsave()) {
    _this->_internal_mutable_playsave()->::KwSave::SaveSystem::MergeFrom(
        from._internal_playsave());
  }
  if (from._internal_has_mapsave()) {
    _this->_internal_mutable_mapsave()->::KwSave::SaveSystem::MergeFrom(
        from._internal_mapsave());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Save_Data::CopyFrom(const Save_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KwSave.Save_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Save_Data::IsInitialized() const {
  return true;
}

void Save_Data::InternalSwap(Save_Data* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Save_Data, _impl_.mapsave_)
      + sizeof(Save_Data::_impl_.mapsave_)
      - PROTOBUF_FIELD_OFFSET(Save_Data, _impl_.homesave_)>(
          reinterpret_cast<char*>(&_impl_.homesave_),
          reinterpret_cast<char*>(&other->_impl_.homesave_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Save_Data::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_save_5fdata_2eproto_getter, &descriptor_table_save_5fdata_2eproto_once,
      file_level_metadata_save_5fdata_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace KwSave
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::KwSave::SaveSystem*
Arena::CreateMaybeMessage< ::KwSave::SaveSystem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KwSave::SaveSystem >(arena);
}
template<> PROTOBUF_NOINLINE ::KwSave::Save_Data*
Arena::CreateMaybeMessage< ::KwSave::Save_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::KwSave::Save_Data >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
